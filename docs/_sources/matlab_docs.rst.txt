MATLAB
======

This page shows the documentation automatically generated from docstrings in the MATLAB source, located in folder `matlab/`.

Setting Up Sphinx
-----------------

In order to enable MATLAB docstring reading for Sphinx, you need the
`sphinxcontrib.matlab <https://github.com/sphinx-contrib/matlabdomain>`_ python package.

This can be installed through `pip <https://pypi.org/project/sphinxcontrib-matlabdomain/>`_:

.. code::

    pip install -U sphinxcontrib-matlabdomain

Once installed, the package needs to be added to Sphinx `conf.py`:

.. code-block:: python

    extensions = [
        ...,
        'sphinxcontrib.matlab',
        'sphinx.ext.autodoc',
        'sphinx.ext.napoleon',
        ...
    ]

`autodoc` has also been added for automatic documentation, and `napoleon` has been added for Google style docstrings.

Finally, the folder which contains all the MATLAB code should added to `conf.py` as well:

.. code-block:: python

    matlab_src_dir = os.path.abspath('../matlab')

This tells Sphinx where to look for MATLAB files. In this case, all the MATLAB code is in the `matlab/` folder.

Generating Documentation from Docstrings
----------------------------------------

The MATLAB auto-generation works the same way as with Python, through the use of the usual `autodoc`  `directives <https://www.sphinx-doc.org/en/master/usage/extensions/autodoc.html>`_:

- `mat:automodule`
- `mat:autoclass`
- `mat:autofunction`
- *etc.*

However, MATLAB sorts its definitions differently to Python.
Each function and class definition is in its own file with definition matching the function name.
Hence MATLAB "modules" are folders containing MATLAB function/class definitions.

For example, the `my_function.m` function is located in the `my_module/` folder, hence it is in the module `my_module`.

MATLAB Code
-----------

Everything after this sentence is autogenerated from the docstrings in the MATLAB source files.

.. mat:automodule:: my_module
    :members:
